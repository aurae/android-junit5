import java.util.jar.JarFile

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:$SHADOW_PLUGIN_VERSION"
  }
}

apply plugin: "java-library"
apply plugin: "com.github.johnrengelman.shadow"

// ------------------------------------------------------------------------------------------------
// Dependency Definitions
// This module exports a "fat JAR" containing embedded JARs from IntelliJ IDEA,
// using a shadowed JAR that overrides the default build artifact.
//
// Path to this JAR inside an IntelliJ IDEA package:
// "plugins/junit/lib/junit5-rt.jar"
// ------------------------------------------------------------------------------------------------

dependencies {
  implementation files("libs/junit5-rt.jar")
}

shadowJar {
  // Remove '-all' suffix from the generated JAR
  classifier = null
  version = PLUGIN_RUNTIME_VERSION_NAME
}

// Replace the default JAR task with the "shadow version",
// to avoid accidentally overriding it with the empty, non-shadowed JAR
// upon deploying a version to users via Bintray or Sonatype OSS
jar.enabled = false
jar.dependsOn shadowJar

// ------------------------------------------------------------------------------------------------
// Deployment Setup
//
// Releases are pushed to jcenter via Bintray, while snapshots are pushed to Sonatype OSS.
// This section defines the necessary tasks to push new releases and snapshots using Gradle tasks.
// ------------------------------------------------------------------------------------------------
project.ext.deployConfig = [platform        : "java",
                            artifactId      : RUNTIME_ARTIFACT_ID,
                            version         : PLUGIN_RUNTIME_VERSION_NAME,
                            license         : RUNTIME_LICENSE_NAME,
                            description     : RUNTIME_DESCRIPTION,
                            beforePublishDo : {
                              // Manually verify that the JAR file isn't "empty"
                              // before attempting the upload. This happens on accidental
                              // upload attempts without first deploying the shadowJar.
                              def jarFile = new JarFile(shadowJar.archivePath)
                              if (jarFile.getEntry("com") == null) {
                                throw new AssertionError("The embedded-runtime JAR is empty!")
                              }
                            },
                            mavenPublication: {
                              groupId RUNTIME_GROUP_ID
                              project.shadow.component(it)
                            }]
apply from: "$rootDir/gradle/deployment.gradle"
