apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

configurations {
    testAgp2xCompile {
        extendsFrom configurations.testCompile
    }
    testAgp3xCompile {
        extendsFrom configurations.testCompile
    }
}

sourceSets {
    testAgp2x {
        java.srcDir "src/testAgp2x/groovy"
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        compileClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.test.output
    }
    testAgp3x {
        java.srcDir "src/testAgp3x/groovy"
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        compileClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.test.output
    }
}

idea {
    module {
        testSourceDirs += file("src/testAgp2x/groovy")
        testSourceDirs += file("src/testAgp3x/groovy")
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "com.github.zafarkhaja:java-semver:$SEMVER_VERSION"
    compile "org.junit.platform:junit-platform-gradle-plugin:$JUNIT_PLATFORM_VERSION"
    compileOnly "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION_3X"

    testCompile "junit:junit:$JUNIT4_VERSION"
    testCompile("org.spockframework:spock-core:$SPOCK_VERSION") { transitive = false }

    testCompileOnly "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION_3X"
    testAgp2xCompile "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION_2X"
    testAgp3xCompile "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION_3X"
}

// Run Unit Tests against Android Gradle Plugin version 2.x
task testAgp2x(type: Test) {
    testClassesDirs = sourceSets.testAgp2x.output.classesDirs
    classpath = sourceSets.main.runtimeClasspath + sourceSets.testAgp2x.runtimeClasspath
}

// Run Unit Tests against Android Gradle Plugin version 3.x
task testAgp3x(type: Test) {
    testClassesDirs = sourceSets.testAgp3x.output.classesDirs
    classpath = sourceSets.main.runtimeClasspath + sourceSets.testAgp3x.runtimeClasspath
}

// Combine all tests when executing the main JUnit task
tasks.getByName("test").dependsOn(
        testAgp2x,
        testAgp3x
)

version = VERSION_NAME

bintray {
    user = project.ext.bintrayUser
    key = project.ext.bintrayKey
    configurations = ['archives']
    dryRun = false
    pkg {
        repo = 'maven'
        name = ARTIFACT_ID
        userOrg = properties.get("BINTRAY_USER")
        licenses = ["EPL-1.0"]
        publish = true
        publicDownloadNumbers = true
        vcsUrl = VCS_URL
        version {
            name = VERSION_NAME
            desc = DESCRIPTION
        }
    }
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId GROUP_ID
            artifactId ARTIFACT_ID
            version VERSION_NAME
            pom.withXml {
                def root = asNode()
                root.appendNode("description", DESCRIPTION)
                root.appendNode("name", ARTIFACT_ID)
                root.appendNode("url", VCS_URL)
            }
        }
    }
}

task copyPom(type: Copy) {
    from 'build/publications/library'
    into 'build/poms'
    include 'pom-default.xml'
}

publish.dependsOn copyPom

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: rootProject.file('gradle/gradle-artifactory-upload.gradle')
