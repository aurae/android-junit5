buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath "de.mannodermaus.gradle.plugins:android-junit5:$PLUGIN_RUNTIME_VERSION_NAME_LATEST_STABLE"
  }
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "jacoco"

android {
  compileSdkVersion COMPILE_SDK_VERSION

  defaultConfig {
    applicationId "de.mannodermaus.junit5.sample"
    minSdkVersion SAMPLE_MIN_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
  }

  flavorDimensions "kind"
  productFlavors {
    experimental {
      dimension "kind"
      minSdkVersion 26
    }

    normal {
      dimension "kind"
    }
  }

  // Add Kotlin source directory to all source sets
  sourceSets.each {
    it.java.srcDirs += "src/$it.name/kotlin"
  }

  compileOptions {
    targetCompatibility JavaVersion.VERSION_1_8
    sourceCompatibility JavaVersion.VERSION_1_8
  }

  testOptions {
    junitPlatform {
      details "tree"
    }
  }

  packagingOptions {
    exclude "META-INF/LICENSE.md"
    exclude "META-INF/LICENSE-notice.md"
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"

  testImplementation junit5.unitTests()
  testImplementation junit5.parameterized()
  testCompileOnly junit5.unitTestsRuntime()

  androidTestImplementation "junit:junit:$JUNIT4_VERSION"
  androidTestImplementation "com.android.support.test:runner:$SUPPORT_TEST_LIBRARY_VERSION"

  androidTestRuntimeOnly project(":instrumentation-runner")
  androidTestExperimentalImplementation junit5.unitTests()
  androidTestExperimentalImplementation junit5.parameterized()
  androidTestExperimentalImplementation project(":instrumentation")
}
