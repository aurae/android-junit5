apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
  compileSdkVersion COMPILE_SDK_VERSION
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    // TODO Apply automatically through Gradle Plugin eventually
    testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
  }

  sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/test/kotlin"
    androidTest.java.srcDirs += "src/androidTest/kotlin"
  }

  compileOptions {
    targetCompatibility JavaVersion.VERSION_1_8
    sourceCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude "META-INF/LICENSE.md"
    exclude "META-INF/LICENSE-notice.md"
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
  implementation "junit:junit:$JUNIT4_VERSION"
  implementation "com.android.support.test:runner:$SUPPORT_TEST_LIBRARY_VERSION"
  implementation "org.junit.platform:junit-platform-runner:$JUNIT_PLATFORM_VERSION"
  compileOnly "org.junit.jupiter:junit-jupiter-api:$JUNIT_JUPITER_VERSION"

  androidTestImplementation "org.assertj:assertj-core:$ASSERTJ_VERSION"
  androidTestImplementation "com.squareup.assertj:assertj-android:$ASSERTJ_ANDROID_VERSION"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
  androidTestCompileOnly "org.junit.jupiter:junit-jupiter-api:$JUNIT_JUPITER_VERSION"
  androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUNIT_JUPITER_VERSION"

  testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
}

// ------------------------------------------------------------------------------------------------
// Deployment Setup
//
// Releases are pushed to jcenter via Bintray, while snapshots are pushed to Sonatype OSS.
// This section defines the necessary tasks to push new releases and snapshots using Gradle tasks.
// ------------------------------------------------------------------------------------------------
project.ext.deployConfig = [platform        : "android",
                            artifactId      : INSTRUMENTATION_ARTIFACT_ID,
                            version         : INSTRUMENTATION_VERSION_NAME,
                            license         : INSTRUMENTATION_LICENSE_NAME,
                            description     : INSTRUMENTATION_DESCRIPTION,
                            beforePublishDo : null,
                            mavenPublication: {
                              from components.android
                              artifact sourcesJar
                              artifact javadocJar
                              groupId INSTRUMENTATION_GROUP_ID
                              artifactId INSTRUMENTATION_ARTIFACT_ID
                              version INSTRUMENTATION_VERSION_NAME
                              pom.withXml {
                                def root = asNode()
                                root.appendNode("description", INSTRUMENTATION_DESCRIPTION)
                                root.appendNode("name", INSTRUMENTATION_ARTIFACT_ID)
                                root.appendNode("url", VCS_URL)
                              }
                            }]
apply from: "$rootDir/gradle/deployment.gradle"
