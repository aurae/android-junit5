apply plugin: "com.github.ben-manes.versions"

buildscript {
  repositories {
    google()
    jcenter()
    maven { url "https://jitpack.io" }
  }
  dependencies {
    // Miscellaneous
    classpath "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
    classpath "com.github.ben-manes:gradle-versions-plugin:$VERSIONS_PLUGIN_VERSION"

    // Deployment: Snapshots
    classpath "digital.wup:android-maven-publish:$ANDROID_MAVEN_PLUGIN_VERSION"

    // Deployment: Releases
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$BINTRAY_PLUGIN_VERSION"
    classpath "com.github.dcendents:android-maven-gradle-plugin:$DCENDENTS_MAVEN_PLUGIN_VERSION"
  }
}

// Populate deployment credentials in an environment-aware fashion.
//
// * Local development:
//      Stored in local.properties file on the machine
// * CI Server:
//      Stored in environment variables before launch
Properties properties = new Properties()

def credentialsFile = new File(project.rootDir, "local.properties")
if (credentialsFile.exists()) {
  credentialsFile.withReader { properties.load(it) }
}

def bintrayUser = properties.getProperty("BINTRAY_USER", System.getenv("bintrayUser"))
def bintrayKey = properties.getProperty("BINTRAY_KEY", System.getenv("bintrayKey"))
def sonatypeUser = properties.getProperty("SONATYPE_USER", System.getenv("sonatypeUser"))
def sonatypePass = properties.getProperty("SONATYPE_PASS", System.getenv("sonatypePass"))

allprojects {
  repositories {
    google()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }

  // Store deployment credentials
  ext.bintrayUser = bintrayUser
  ext.bintrayKey = bintrayKey
  ext.sonatypeUser = sonatypeUser
  ext.sonatypePass = sonatypePass

  apply from: "$rootDir/gradle/dependencies.gradle.kts"
}
